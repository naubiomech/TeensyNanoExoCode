;Board information
;ALL FIELDS SHOULD BE LESS THAN 25 CHAR
[Board]
	name = AK_Board
	version = 0.5.1

[Exo]
	name = bilateralHip
    
[Battery]
    	;Describes the type of battery used, values: smart(inspired energy), dumb (simple lipo)
	name = dumb

[test]
	;Sides - left, right, bilateral	
	sides = bilateral

	;Joints used and their motor name, 0 = not useed, AK60, AK60v1.1, AK70, are AK80 the different CAN motors.
    	;Values 0(not used), AK60, AK60v1.1, AK70, AK80, MaxonMotor
	hip = 0
	knee = 0
	ankle = 0
	elbow = 0
    
    	;Joint gear ratio = velocity of driving member (motor)/velocity of the driven member (output shaft), assumes constant gearing ratio. If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    	;This is for transmission gearing after the motor output shaft. If the Motor has a built in gearing that should be part of the motor class (see motor.h/.cpp)
    	;Values 1, 2, 3, 4.5
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5
	elbowGearRatio = 4.5

	;Default controller for the joint
	;Hip Controllers: zeroTorque, franksCollinsHip, constantTorque, chirp, step, phmc
	;Knee Controllers: zeroTorque, constantTorque, chirp, step
	;Ankle Controllers: zeroTorque, PJMC, zhangCollins, constantTorque, TREC, calibrManager, chirp, step, SPV2 
	;Elbow Controllers: zeroTorque, elbowMinMax, calibrManager, chirp, step
	hipDefaultController = 0
	kneeDefaultController = 0
	ankleDefaultController = 0
	elbowDefaultController = 0
    
    	;Do you want to use a torque sensor for these joints, 0 = no, yes = yes
	hipUseTorqueSensor = 0
	kneeUseTorqueSensor = 0
	ankleUseTorqueSensor = 0
	elbowUseTorqueSensor = 0

	;Flip direction for the motor cmd, 0 neither, left, right, both
	hipFlipMotorDir = 0
	kneeFlipMotorDir = 0
	ankleFlipMotorDir = 0
	elbowFlipMotorDir = 0

	;Flip direction for the torque sensor readings, 0 neither, left, right, both
	hipFlipTorqueDir = 0
	kneeFlipTorqueDir = 0
	ankleFlipTorqueDir = 0
	elbowFlipTorqueDir = 0

	;Flip direction for the angle sensor readings, 0 neither, left, right, both
	hipFlipAngleDir = 0
	kneeFlipAngleDir = 0
	ankleFlipAngleDir = 0
	elbowFlipAngleDir = 0

	;Exoskeleton joint range of motion in degrees
	leftHipRoM = 0
	rightHipRoM = 0
	leftKneeRoM = 0
	rightKneeRoM = 0
	leftAnkleRoM = 0
	rightAnkleRoM = 0
	leftElbowRoM = 0
	rightElbowRoM = 0
	
	;Torque sensor calibration results, a value of "255" leads to the calibration value being utilizied
	leftHipTorqueOffset = 255
	rightHipTorqueOffset = 255
	leftKneeTorqueOffset = 255
	rightKneeTorqueOffset = 255
	leftAnkleTorqueOffset = 255
	rightAnkleTorqueOffset = 255
	leftElbowTorqueOffset = 255
	rightElbowTorqueOffset = 255

[bilateralHipAnkle]
	;Sides - left, right, bilateral	
	sides = bilateral

	;Joints used and their motor name, 0 = not useed, AK60, AK60v1.1, AK70, are AK80 the different CAN motors.
    	;Values 0(not used), AK60, AK60v1.1, AK70, AK80, MaxonMotor
	hip = AK60v1.1
	knee = 0
	ankle = AK80
	elbow = 0
    
    	;Joint gear ratio = velocity of driving member (motor)/velocity of the driven member (output shaft), assumes constant gearing ratio. If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    	;This is for transmission gearing after the motor output shaft. If the Motor has a built in gearing that should be part of the motor class (see motor.h/.cpp)
    	;Values 1, 2, 3, 4.5
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5
	elbowGearRatio = 4.5

	;Default controller for the joint
	;Hip Controllers: zeroTorque, franksCollinsHip, constantTorque, chirp, step, phmc
	;Knee Controllers: zeroTorque, constantTorque, chirp, step
	;Ankle Controllers: zeroTorque, PJMC, zhangCollins, constantTorque, TREC, calibrManager, chirp, step, SPV2 
	;Elbow Controllers: zeroTorque, elbowMinMax, calibrManager, chirp, step
	hipDefaultController = franksCollinsHip
	kneeDefaultController = 0
	ankleDefaultController = PJMC
	elbowDefaultController = 0
    
    	;Do you want to use a torque sensor for these joints, 0 = no, yes = yes
	hipUseTorqueSensor = 0
	kneeUseTorqueSensor = 0
	ankleUseTorqueSensor = 0
	elbowUseTorqueSensor = 0

	;Flip direction for the motor cmd, 0 neither, left, right, both
	hipFlipMotorDir = left
	kneeFlipMotorDir = 0
	ankleFlipMotorDir = left
	elbowFlipMotorDir = 0

	;Flip direction for the torque sensor readings, 0 neither, left, right, both
	hipFlipTorqueDir = right
	kneeFlipTorqueDir = 0
	ankleFlipTorqueDir = right
	elbowFlipTorqueDir = 0

	;Flip direction for the angle sensor readings, 0 neither, left, right, both
	hipFlipAngleDir = 0
	kneeFlipAngleDir = 0
	ankleFlipAngleDir = 0
	elbowFlipAngleDir = 0

	;Exoskeleton joint range of motion in degrees
	leftHipRoM = 0
	rightHipRoM = 0
	leftKneeRoM = 0
	rightKneeRoM = 0
	leftAnkleRoM = 0
	rightAnkleRoM = 0
	leftElbowRoM = 0
	rightElbowRoM = 0
	
	;Torque sensor calibration results, a value of "255" leads to the calibration value being utilizied
	leftHipTorqueOffset = 255
	rightHipTorqueOffset = 255
	leftKneeTorqueOffset = 255
	rightKneeTorqueOffset = 255
	leftAnkleTorqueOffset = 255
	rightAnkleTorqueOffset = 255
	leftElbowTorqueOffset = 255
	rightElbowTorqueOffset = 255
    
[bilateralHip]
	;Sides - left, right, bilateral	
	sides = bilateral

	;Joints used and their motor name, 0 = not useed, AK60, AK60v1.1, AK70, are AK80 the different CAN motors.
    	;Values 0(not used), AK60, AK60v1.1, AK70, AK80, MaxonMotor
	hip = AK60v1.1
	knee = 0
	ankle = 0
	elbow = 0
    
    	;Joint gear ratio = velocity of driving member (motor)/velocity of the driven member (output shaft), assumes constant gearing ratio. If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    	;This is for transmission gearing after the motor output shaft. If the Motor has a built in gearing that should be part of the motor class (see motor.h/.cpp)
    	;Values 1, 2, 3, 4.5
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5
	elbowGearRatio = 4.5

	;Default controller for the joint
	;Hip Controllers: zeroTorque, franksCollinsHip, constantTorque, chirp, step, phmc
	;Knee Controllers: zeroTorque, constantTorque, chirp, step
	;Ankle Controllers: zeroTorque, PJMC, zhangCollins, constantTorque, TREC, calibrManager, chirp, step, SPV2 
	;Elbow Controllers: zeroTorque, elbowMinMax, calibrManager, chirp, step
	hipDefaultController = franksCollinsHip
	kneeDefaultController = 0
	ankleDefaultController = 0
	elbowDefaultController = 0
    
    	;Do you want to use a torque sensor for these joints, 0 = no, yes = yes
	hipUseTorqueSensor = 0
	kneeUseTorqueSensor = 0
	ankleUseTorqueSensor = 0
	elbowUseTorqueSensor = 0

	;Flip direction for the motor cmd, 0 neither, left, right, both
	hipFlipMotorDir = left
	kneeFlipMotorDir = 0
	ankleFlipMotorDir = 0
	elbowFlipMotorDir = 0

	;Flip direction for the torque sensor readings, 0 neither, left, right, both
	hipFlipTorqueDir = right
	kneeFlipTorqueDir = 0
	ankleFlipTorqueDir = 0
	elbowFlipTorqueDir = 0

	;Flip direction for the angle sensor readings, 0 neither, left, right, both
	hipFlipAngleDir = 0
	kneeFlipAngleDir = 0
	ankleFlipAngleDir = 0
	elbowFlipAngleDir = 0
	
	;Exoskeleton joint range of motion in degrees
	leftHipRoM = 0
	rightHipRoM = 0
	leftKneeRoM = 0
	rightKneeRoM = 0
	leftAnkleRoM = 0
	rightAnkleRoM = 0
	leftElbowRoM = 0
	rightElbowRoM = 0
	
	;Torque sensor calibration results, a value of "255" leads to the calibration value being utilizied
	leftHipTorqueOffset = 255
	rightHipTorqueOffset = 255
	leftKneeTorqueOffset = 255
	rightKneeTorqueOffset = 255
	leftAnkleTorqueOffset = 255
	rightAnkleTorqueOffset = 255
	leftElbowTorqueOffset = 255
	rightElbowTorqueOffset = 255
    
[bilateralAnkle]
	;Sides - left, right, bilateral	
	sides = bilateral

	;Joints used and their motor name, 0 = not useed, AK60, AK60v1.1, AK70, are AK80 the different CAN motors.
    	;Values 0(not used), AK60, AK60v1.1, AK70, AK80, MaxonMotor, MaxonMotor
	hip = 0
	knee = 0
	ankle = AK80
	elbow = 0
    
    	;Joint gear ratio = velocity of driving member (motor)/velocity of the driven member (output shaft), assumes constant gearing ratio. If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    	;This is for transmission gearing after the motor output shaft. If the Motor has a built in gearing that should be part of the motor class (see motor.h/.cpp)
    	;Values 1, 2, 3, 4.5
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5
	elbowGearRatio = 4.5

	;Default controller for the joint
	;Hip Controllers: zeroTorque, franksCollinsHip, constantTorque, chirp, step, phmc
	;Knee Controllers: zeroTorque, constantTorque, chirp, step
	;Ankle Controllers: zeroTorque, PJMC, zhangCollins, constantTorque, TREC, calibrManager, chirp, step, SPV2 
	;Elbow Controllers: zeroTorque, elbowMinMax, calibrManager, chirp, step
	hipDefaultController = 0
	kneeDefaultController = 0
	ankleDefaultController = calibrManager
	elbowDefaultController = 0
    
    	;Do you want to use a torque sensor for these joints, 0 = no, yes = yes
	hipUseTorqueSensor = 0
	kneeUseTorqueSensor = 0
	ankleUseTorqueSensor = yes
	elbowUseTorqueSensor = 0

	;Flip direction for the motor cmd, 0 neither, left, right, both
	hipFlipMotorDir = 0
	kneeFlipMotorDir = 0
	ankleFlipMotorDir = left
	elbowFlipMotorDir = 0

	;Flip direction for the torque sensor readings, 0 neither, left, right, both
	hipFlipTorqueDir = 0
	kneeFlipTorqueDir = 0
	ankleFlipTorqueDir = right
	elbowFlipTorqueDir = 0

	;Flip direction for the angle sensor readings, 0 neither, left, right, both
	hipFlipAngleDir = 0
	kneeFlipAngleDir = 0
	ankleFlipAngleDir = 0
	elbowFlipAngleDir = 0
	
	;Exoskeleton joint range of motion in degrees
	leftHipRoM = 0
	rightHipRoM = 0
	leftKneeRoM = 0
	rightKneeRoM = 0
	leftAnkleRoM = 0
	rightAnkleRoM = 0
	leftElbowRoM = 0
	rightElbowRoM = 0
	
	;Torque sensor calibration results, a value of "255" leads to the calibration value being utilizied
	leftHipTorqueOffset = 255
	rightHipTorqueOffset = 255
	leftKneeTorqueOffset = 255
	rightKneeTorqueOffset = 255
	leftAnkleTorqueOffset = 255
	rightAnkleTorqueOffset = 255
	leftElbowTorqueOffset = 255
	rightElbowTorqueOffset = 255

[bilateralElbow]
	;Sides - left, right, bilateral	
	sides = bilateral

	;Joints used and their motor name, 0 = not useed, AK60, AK60v1.1, AK70, are AK80 the different CAN motors.
    	;Values 0(not used), AK60, AK60v1.1, AK70, AK80, MaxonMotor
	hip = 0
	knee = 0
	ankle = 0
	elbow = AK60v1.1
    
    	;Joint gear ratio = velocity of driving member (motor)/velocity of the driven member (output shaft), assumes constant gearing ratio. If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    	;This is for transmission gearing after the motor output shaft. If the Motor has a built in gearing that should be part of the motor class (see motor.h/.cpp)
    	;Values 1, 2, 3, 4.5
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5
	elbowGearRatio = 4.5

	;Default controller for the joint
	;Hip Controllers: zeroTorque, franksCollinsHip, constantTorque, chirp, step, phmc
	;Knee Controllers: zeroTorque, constantTorque, chirp, step
	;Ankle Controllers: zeroTorque, PJMC, zhangCollins, constantTorque, TREC, calibrManager, chirp, step, SPV2 
	;Elbow Controllers: zeroTorque, elbowMinMax, calibrManager, chirp, step
	hipDefaultController = 0
	kneeDefaultController = 0
	ankleDefaultController = 0
	elbowDefaultController = elbowMinMax
    
    	;Do you want to use a torque sensor for these joints, 0 = no, yes = yes
	hipUseTorqueSensor = 0
	kneeUseTorqueSensor = 0
	ankleUseTorqueSensor = 0
	elbowUseTorqueSensor = yes

	;Flip direction for the motor cmd, 0 neither, left, right, both
	hipFlipMotorDir = 0
	kneeFlipMotorDir = 0
	ankleFlipMotorDir = 0
	elbowFlipMotorDir = left

	;Flip direction for the torque sensor readings, 0 neither, left, right, both
	hipFlipTorqueDir = 0
	kneeFlipTorqueDir = 0
	ankleFlipTorqueDir = 0
	elbowFlipTorqueDir = right

	;Flip direction for the angle sensor readings, 0 neither, left, right, both
	hipFlipAngleDir = 0
	kneeFlipAngleDir = 0
	ankleFlipAngleDir = 0
	elbowFlipAngleDir = 0

	;Exoskeleton joint range of motion in degrees
	leftHipRoM = 0
	rightHipRoM = 0
	leftKneeRoM = 0
	rightKneeRoM = 0
	leftAnkleRoM = 0
	rightAnkleRoM = 0
	leftElbowRoM = 0
	rightElbowRoM = 0
	
	;Torque sensor calibration results, a value of "255" leads to the calibration value being utilizied
	leftHipTorqueOffset = 255
	rightHipTorqueOffset = 255
	leftKneeTorqueOffset = 255
	rightKneeTorqueOffset = 255
	leftAnkleTorqueOffset = 255
	rightAnkleTorqueOffset = 255
	leftElbowTorqueOffset = 255
	rightElbowTorqueOffset = 255

[bilateralHipElbow]
	;Sides - left, right, bilateral	
	sides = bilateral

	;Joints used and their motor name, 0 = not useed, AK60, AK60v1.1, AK70, are AK80 the different CAN motors.
    	;Values 0(not used), AK60, AK60v1.1, AK70, AK80, MaxonMotor
	hip = AK60v1.1
	knee = 0
	ankle = 0
	elbow = AK60v1.1
    
    	;Joint gear ratio = velocity of driving member (motor)/velocity of the driven member (output shaft), assumes constant gearing ratio. If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    	;This is for transmission gearing after the motor output shaft. If the Motor has a built in gearing that should be part of the motor class (see motor.h/.cpp)
    	;Values 1, 2, 3, 4.5
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5
	elbowGearRatio = 4.5

	;Default controller for the joint
	;Hip Controllers: zeroTorque, franksCollinsHip, constantTorque, chirp, step, phmc
	;Knee Controllers: zeroTorque, constantTorque, chirp, step
	;Ankle Controllers: zeroTorque, PJMC, zhangCollins, constantTorque, TREC, calibrManager, chirp, step, SPV2 
	;Elbow Controllers: zeroTorque, elbowMinMax, calibrManager, chirp, step
	hipDefaultController = franksCollinsHip
	kneeDefaultController = 0
	ankleDefaultController = 0
	elbowDefaultController = elbowMinMax
    
    	;Do you want to use a torque sensor for these joints, 0 = no, yes = yes
	hipUseTorqueSensor = 0
	kneeUseTorqueSensor = 0
	ankleUseTorqueSensor = 0
	elbowUseTorqueSensor = yes

	;Flip direction for the motor cmd, 0 neither, left, right, both
	hipFlipMotorDir = left
	kneeFlipMotorDir = 0
	ankleFlipMotorDir = 0
	elbowFlipMotorDir = left

	;Flip direction for the torque sensor readings, 0 neither, left, right, both
	hipFlipTorqueDir = right
	kneeFlipTorqueDir = 0
	ankleFlipTorqueDir = 0
	elbowFlipTorqueDir = right

	;Flip direction for the angle sensor readings, 0 neither, left, right, both
	hipFlipAngleDir = 0
	kneeFlipAngleDir = 0
	ankleFlipAngleDir = 0
	elbowFlipAngleDir = 0

	;Exoskeleton joint range of motion in degrees
	leftHipRoM = 0
	rightHipRoM = 0
	leftKneeRoM = 0
	rightKneeRoM = 0
	leftAnkleRoM = 0
	rightAnkleRoM = 0
	leftElbowRoM = 0
	rightElbowRoM = 0
	
	;Torque sensor calibration results, a value of "255" leads to the calibration value being utilizied
	leftHipTorqueOffset = 255
	rightHipTorqueOffset = 255
	leftKneeTorqueOffset = 255
	rightKneeTorqueOffset = 255
	leftAnkleTorqueOffset = 255
	rightAnkleTorqueOffset = 255
	leftElbowTorqueOffset = 255
	rightElbowTorqueOffset = 255

[bilateralAnkleElbow]
	;Sides - left, right, bilateral	
	sides = bilateral

	;Joints used and their motor name, 0 = not useed, AK60, AK60v1.1, AK70, are AK80 the different CAN motors.
    	;Values 0(not used), AK60, AK60v1.1, AK70, AK80, MaxonMotor
	hip = 0
	knee = 0
	ankle = AK80
	elbow = AK60v1.1
    
    	;Joint gear ratio = velocity of driving member (motor)/velocity of the driven member (output shaft), assumes constant gearing ratio. If the motor spins 6 revolutions to 1 revolution of the output this value would be 6.
    	;This is for transmission gearing after the motor output shaft. If the Motor has a built in gearing that should be part of the motor class (see motor.h/.cpp)
    	;Values 1, 2, 3, 4.5
	hipGearRatio = 1
	kneeGearRatio = 1
	ankleGearRatio = 4.5
	elbowGearRatio = 4.5

	;Default controller for the joint
	;Hip Controllers: zeroTorque, franksCollinsHip, constantTorque, chirp, step, phmc
	;Knee Controllers: zeroTorque, constantTorque, chirp, step
	;Ankle Controllers: zeroTorque, PJMC, zhangCollins, constantTorque, TREC, calibrManager, chirp, step, SPV2 
	;Elbow Controllers: zeroTorque, elbowMinMax, calibrManager, chirp, step
	hipDefaultController = 0
	kneeDefaultController = 0
	ankleDefaultController = PJMC
	elbowDefaultController = elbowMinMax
    
    	;Do you want to use a torque sensor for these joints, 0 = no, yes = yes
	hipUseTorqueSensor = 0
	kneeUseTorqueSensor = 0
	ankleUseTorqueSensor = yes
	elbowUseTorqueSensor = yes

	;Flip direction for the motor cmd, 0 neither, left, right, both
	hipFlipMotorDir = 0
	kneeFlipMotorDir = 0
	ankleFlipMotorDir = left
	elbowFlipMotorDir = left

	;Flip direction for the torque sensor readings, 0 neither, left, right, both
	hipFlipTorqueDir = 0
	kneeFlipTorqueDir = 0
	ankleFlipTorqueDir = right
	elbowFlipTorqueDir = right

	;Flip direction for the angle sensor readings, 0 neither, left, right, both
	hipFlipAngleDir = 0
	kneeFlipAngleDir = 0
	ankleFlipAngleDir = 0
	elbowFlipAngleDir = 0

	;Exoskeleton joint range of motion in degrees
	leftHipRoM = 0
	rightHipRoM = 0
	leftKneeRoM = 0
	rightKneeRoM = 0
	leftAnkleRoM = 0
	rightAnkleRoM = 0
	leftElbowRoM = 0
	rightElbowRoM = 0
	
	;Torque sensor calibration results, a value of "255" leads to the calibration value being utilizied
	leftHipTorqueOffset = 255
	rightHipTorqueOffset = 255
	leftKneeTorqueOffset = 255
	rightKneeTorqueOffset = 255
	leftAnkleTorqueOffset = 255
	rightAnkleTorqueOffset = 255
	leftElbowTorqueOffset = 255
	rightElbowTorqueOffset = 255